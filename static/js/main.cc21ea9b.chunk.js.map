{"version":3,"sources":["Pages/About.js","Actions/REMOVE_ITEM.js","Components/Product.js","Actions/ADD_ITEM.js","Pages/Cart.js","Pages/Contact.js","Actions/productActions.js","Pages/Shop.js","Components/Header.js","Reducers/CartReducer.js","Reducers/ProductReducer.js","Store/Store.js","App.js","Components/App-Router.js","serviceWorker.js","index.js"],"names":["About","className","src","removeItem","itemId","type","ConnectedProduct","connect","state","dispatch","handleAddItem","item","addItem","handleRemoveItem","props","product","imgPath","height","width","name","price","isCart","style","margin","onClick","id","getTotal","items","value","decimals","total","i","length","Number","Math","round","ConnectedCart","undefined","CartReducer","cartItems","count","map","key","Contact","handleErrors","response","ok","Error","statusText","Shop","this","fetch","then","res","json","payload","products","catch","error","fetchProductsFailure","loading","message","React","Component","ConnectedShop","ProductReducer","Header","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","class","defaultState","action","filter","console","log","store","createStore","combineReducers","applyMiddleware","thunk","Container","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc21ea9b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const About = () => (\r\n    <div className=\"col-12 text-center\">\r\n        <h3>About DrugMart</h3>\r\n        <hr />\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                <img className=\"img-fluid img-responsive\"src=\"http://placekitten.com/g/600/500\"></img>\r\n            </div>\r\n            <div className=\"col-12 d-md-none d-block\">\r\n                <hr/>\r\n            </div>\r\n            <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                <p> jfije ngien gime imgin ieiiei ngie</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);","export function removeItem(itemId){\r\n    return{\r\n        type: \"REMOVE_ITEM\",\r\n        itemId\r\n    };\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addItem} from '../Actions/ADD_ITEM';\r\nimport {removeItem} from '../Actions/REMOVE_ITEM';\r\n\r\n\r\nconst Product = (props) => (\r\n    <div>\r\n        <img src={props.product.imgPath} className=\"img-fluid card-img-overlay\" height=\"100\" width=\"100\"></img>\r\n        <h4 className=\"card-header bg-white\">{props.product.name}</h4>\r\n        <h5 className=\"card-body text-muted\">${props.product.price}</h5>\r\n        {(props.isCart \r\n            ? \r\n            <button style={{margin: 10}} className=\" float-right mb3 btn btn-danger\" onClick={() => props.handleRemoveItem(props.product.id)}>Remove</button>\r\n            : \r\n            <button style={{margin: 10}} className=\" float-right mb3 btn btn-success\" onClick={() => props.handleAddItem(props.product)}>Add to cart</button>)}\r\n    </div>\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleAddItem: item => dispatch(addItem(item)),\r\n        handleRemoveItem: itemId => dispatch(removeItem(itemId))\r\n      };\r\n};\r\n\r\nconst ConnectedProduct = connect(mapStateToProps, mapDispatchToProps)(Product);\r\n\r\nexport default ConnectedProduct;\r\n","\r\n\r\nexport function addItem(item){\r\n    return{\r\n        type: \"ADD_ITEM\",\r\n        item\r\n    };\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {removeItem} from '../Actions/REMOVE_ITEM'\r\nimport Product from '../Components/Product'\r\n\r\nlet total = 0.0;\r\n\r\nconst Cart = (state) => (\r\n    <div>\r\n        <p>Here is your cart</p>\r\n        <div className=\"row text-center\">\r\n        {(state.CartReducer.cartItems != undefined && state.CartReducer.cartItems.count != 0) \r\n            ?\r\n             state.CartReducer.cartItems.map((item) => (\r\n            <div key={item.id} className=\"col-md-6 col-lg-4 align-content-center\">\r\n                    <Product product={item} isCart={true}></Product>            \r\n            </div>\r\n            )\r\n            )\r\n            :\r\n             <p>You have no items in your cart</p>}\r\n        </div>\r\n        <hr />\r\n        <h4>Total: ${getTotal(state.CartReducer.cartItems)}</h4>\r\n    </div>\r\n);\r\n\r\nconst getTotal = (items) => {\r\n    let total = 0;\r\n    for(let i = 0; i < items.length; i++){\r\n        total += items[i].price;\r\n    }\r\n    return round(total, 2);\r\n}\r\n\r\nfunction round(value, decimals) {\r\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\r\n  }\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleRemoveItem: itemId => dispatch(removeItem(itemId))\r\n      };\r\n};\r\n\r\nconst ConnectedCart = connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n\r\nexport default ConnectedCart;","import React from 'react';\r\n\r\nexport const Contact = () => (\r\n    <div>\r\n        <p>Contact us</p>\r\n    </div>\r\n);","export const FETCH_PRODUCTS_BEGIN = 'FETCH_PRODUCTS_BEGIN';\r\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\r\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE';\r\n\r\nexport const fetchProductsBegin = () => ({\r\n    type: FETCH_PRODUCTS_BEGIN\r\n});\r\n\r\nexport const fetchProductsSuccess = products => ({\r\n    type: FETCH_PRODUCTS_SUCCESS,\r\n    payload: { products }\r\n});\r\n\r\nexport const fetchProductsFailure = error => ({\r\n    type: FETCH_PRODUCTS_FAILURE,\r\n    payload: { error }\r\n});\r\n\r\n\r\nexport function fetchProducts() {\r\n    return dispatch => {\r\n      dispatch(fetchProductsBegin());\r\n      return fetch(\"https://discountdm.herokuapp.com/getItems\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          dispatch(fetchProductsSuccess(json));\r\n          return json;\r\n        })\r\n        .catch(error => dispatch(fetchProductsFailure(error)));\r\n    };\r\n  }\r\n  \r\n  // Handle HTTP errors since fetch won't.\r\n  function handleErrors(response) {\r\n    if (!response.ok) {\r\n      throw Error(response.statusText);\r\n    }\r\n    return response;\r\n  }","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchProducts} from '../Actions/productActions';\r\nimport Product from '../Components/Product'\r\n\r\nclass Shop extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchProducts());\r\n      }\r\n\r\n\r\n    render(){\r\n        const { error, loading, products } = this.props;\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>;\r\n          }\r\n      \r\n          if (loading) {\r\n            return <div>Loading...</div>;\r\n          }\r\n      \r\n          return (\r\n            <div className=\"row text-center\">\r\n              {products.map(product =>\r\n                <div key={product.id} className=\"col-md-6 col-lg-4\" >\r\n                    <div className=\"card mb-3\">\r\n                        <Product isCart={false} product={product} />\r\n                    </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.ProductReducer.items,\r\n    loading: state.ProductReducer.loading,\r\n    error: state.ProductReducer.error\r\n  });\r\n\r\nconst ConnectedShop = connect(mapStateToProps)(Shop);\r\n\r\nexport default ConnectedShop;\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends React.Component{\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Discount Drug Mart</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                        <span class=\"icon-bar\"></span>\r\n                        <span class=\"icon-bar\"></span>\r\n                        <span class=\"icon-bar\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/shop\">Shop</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/cart\">Cart</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <span className=\"navbar-text\">\r\n                        Saving you the run around since 1969\r\n                        </span>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nlet defaultState = {\r\n    cartItems: []\r\n};\r\n\r\nconst CartReducer = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case \"ADD_ITEM\":\r\n            return {cartItems: [...state.cartItems, action.item]};\r\n        case \"REMOVE_ITEM\":\r\n            return {cartItems: [...state.cartItems.filter(item => item.id != action.itemId)]}\r\n        default:\r\n            return {cartItems: [...state.cartItems]}\r\n    }\r\n};\r\n\r\nexport default CartReducer;","import React from 'react';\r\nimport {FETCH_PRODUCTS_BEGIN, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_FAILURE} from '../Actions/productActions';\r\n\r\nlet defaultState = {\r\n    items: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst ProductReducer = (state = defaultState, action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case FETCH_PRODUCTS_BEGIN:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case FETCH_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                items: action.payload.products\r\n            };\r\n        case FETCH_PRODUCTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n                items: []\r\n              };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst fetchItems = () => {\r\n    fetch('https://discountdm.herokuapp.com/getItems', {\r\n         \r\n    })\r\n      .then((response) => {\r\n          var res = response.json();\r\n        })\r\n      .then((items) => {\r\n        return {storeItems: [items]};\r\n      });\r\n      console.log('fetch items');\r\n}\r\n\r\nexport default ProductReducer;","import React from 'react';\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport CartReducer from '../Reducers/CartReducer';\r\nimport ProductReducer from '../Reducers/ProductReducer';\r\n\r\nlet store = createStore(combineReducers({CartReducer, ProductReducer}), applyMiddleware(thunk));\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport {AppRouter} from './Components/App-Router';\nimport store from './Store/Store'\nimport { Provider, connect } from 'react-redux';\n\n\n\nconst App = () => (\n    <Provider store={store}>\n      <Container/>\n    </Provider>\n);\n\n\n// const countReducer = (state = [], action) => {\n//   switch(action.type){\n//     case \"ADDITEM\":\n//       return state + 1;\n//     case \"REMOVEITEM\":\n//       return state - 1;\n//     default:\n//       return state;\n//   }\n// };\n\n// let store = createStore(countReducer);\n\n\n\n// const mapStateToProps = state => {\n//   return {\n//     count: state\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return{\n//     handleIncrementClick: () => dispatch({type: 'INCREMENT'}),\n//     handleDecrementClick: () => dispatch({type: 'DECREMENT'})\n//   }\n// };\n\nconst Container = connect()(AppRouter);\n\n\nexport default App;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport {About} from '../Pages/About';\r\nimport ConnectedCart from '../Pages/Cart';\r\nimport {Contact} from '../Pages/Contact';\r\nimport ConnectedShop from '../Pages/Shop';\r\nimport Header from './Header';\r\n\r\n\r\nexport const AppRouter = () => (\r\n    <div>\r\n        <Router>\r\n            <Header />\r\n            <Switch>\r\n                <div className=\"container\">\r\n                    <Route exact path=\"/\" component={ConnectedShop} />\r\n                    <Route exact path=\"/cart\" component={ConnectedCart} />\r\n                    <Route exact path=\"/about\" component={About} />\r\n                    <Route exact path=\"/contact\" component={Contact} />\r\n                    <Route exact path=\"/shop\" component={ConnectedShop} />\r\n                </div>\r\n            </Switch>\r\n        </Router>\r\n    </div>\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}