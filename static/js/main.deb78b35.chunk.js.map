{"version":3,"sources":["Components/Product.js","Pages/About.js","Actions/cartActions.js","Pages/Cart.js","Pages/Contact.js","Actions/userActions.js","Components/LoginSuccess.js","Pages/Register.js","Pages/Shop.js","Pages/Login.js","Components/RegisterSuccess.js","Actions/productActions.js","Components/CartCounter.js","Components/Header.js","Reducers/CartReducer.js","Reducers/ProductReducer.js","Reducers/UserReducer.js","Store/Store.js","App.js","Components/App-Router.js","serviceWorker.js","index.js"],"names":["isLoggedIn","About","className","src","removeItem","userItemId","type","fetchCartItems","userId","dispatch","fetch","headers","then","handleErrors","res","json","payload","items","catch","error","fetchItemsFailure","response","ok","Error","statusText","Product","undefined","this","props","UserReducer","user","id","product","imgPath","name","price","isCart","style","margin","onClick","handleRemoveItem","disabled","handleAddItem","addedItemMessage","React","Component","ConnectedProduct","connect","state","item","addItem","console","log","postAddItem","putRemoveItem","itemName","itemId","addMessage","document","getElementById","innerHTML","classList","remove","setTimeout","add","Cart","handleFetchCartItems","CartReducer","cartItems","length","map","key","Math","random","getTotal","value","decimals","total","i","Number","round","ConnectedCart","Contact","userNameElement","passwordElement","passwordConfirmElement","ConnectedLoginSuccess","handleGetItemsForUser","userName","to","Login","clearInputs","placeholder","handleOnLogin","localStorage","setItem","ConnectedLogin","username","password","loginUserFailure","loginUser","RegisterSuccess","Register","alert","regSuccess","checkMatch","handleRegisterUser","ConnectedRegister","registerUserFailure","registerUser","a","b","Shop","products","JSON","parse","getItem","fetchProductsFailure","setProducts","loading","message","ConnectedShop","ProductReducer","ConnectedCounter","ConnectedHeader","handleLogout","defaultState","action","addedItems","stringify","filteredItems","filter","store","createStore","combineReducers","applyMiddleware","thunk","Container","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.deb78b35.chunk.js","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {postAddItem, putRemoveItem} from '../Actions/cartActions';\r\n\r\nlet isLoggedIn;\r\n\r\nclass Product extends React.Component{  \r\n    \r\n    componentDidMount(){\r\n        if(this.props.UserReducer.user !== undefined && this.props.UserReducer.user.id !== -1){\r\n            isLoggedIn = true;\r\n        }else{\r\n            isLoggedIn = false;\r\n        }\r\n    }\r\n        \r\n    render(){\r\n        return (\r\n            <div className=\"card h-100\">\r\n                <div className=\"d-none success-added\" id={\"added-item-\" + this.props.product.id}></div>\r\n                <img \r\n                    src={this.props.product.imgPath} \r\n                    className=\"card-img-bottom d-none d-sm-block lrg-product-img\" \r\n                    >\r\n                </img>\r\n                <img\r\n                    src={this.props.product.imgPath}\r\n                    className=\"d-block d-sm-none small-product-img\"\r\n                    >\r\n                </img>\r\n                <h4 className=\"card-header bg-white\">{this.props.product.name}</h4>\r\n                <h5 className=\"card-body text-muted\">${this.props.product.price}</h5>\r\n                {(this.props.isCart \r\n                    ? \r\n                    <button \r\n                        style={{margin: 10}}\r\n                        className=\" float-right mb3 btn btn-danger\"\r\n                        onClick={() => this.props.handleRemoveItem(this.props.product.userItemId)}\r\n                    >\r\n                    Remove\r\n                    </button>\r\n                    : \r\n                    <button\r\n                        style={{margin: 10}}\r\n                        id=\"product-add\" \r\n                        className=\" float-right mb3 btn btn-success\" \r\n                        disabled={!isLoggedIn}\r\n                        onClick={() => {\r\n                            if(!isLoggedIn){\r\n                                \r\n                            }else{\r\n                                this.props.handleAddItem(this.props.UserReducer.user.id ,this.props.product);\r\n                                addedItemMessage(this.props.product.name, this.props.product.id);\r\n                            }\r\n                        }}\r\n                    >\r\n                    Add to cart\r\n                    </button>\r\n                )}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleAddItem: (userId, item) => dispatch(postAddItem(userId, item)),\r\n        handleRemoveItem: userItemId => dispatch(putRemoveItem(userItemId))\r\n      };\r\n};\r\n\r\nconst ConnectedProduct = connect(mapStateToProps, mapDispatchToProps)(Product);\r\n\r\nexport default ConnectedProduct;\r\n\r\nconst addedItemMessage = (itemName, itemId) => {\r\n    let addMessage = document.getElementById('added-item-' + itemId);\r\n    addMessage.innerHTML = itemName + \" added to cart\";\r\n    addMessage.classList.remove(['d-none']);\r\n    setTimeout(() => \r\n    (addMessage.classList.add(['d-none'])), 1000);\r\n};\r\n","import React from 'react';\r\n\r\nexport const About = () => (\r\n    <div className=\"col-12 text-center\">\r\n        <h3>About DrugMart</h3>\r\n        <hr />\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                <img className=\"img-fluid img-responsive img-thumbnail\"src=\"https://s3-prod.crainscleveland.com/s3fs-public/styles/width_792/public/ddm_concord_township.jpg\"></img>\r\n            </div>\r\n            <div className=\"col-12 d-md-none d-block\">\r\n                <hr/>\r\n            </div>\r\n            <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                <p> Discount Drug Mart, Inc., is an Ohio-based drug store chain that opened its first store in Elyria, Ohio in 1969. Since that time, Drug Mart has established stores in over 20 Ohio counties, and currently operates 76 stores, including Dayton and Columbus. The company also expects to announce further expansion within the year.</p>\r\n\r\n                <p>Low prices, outstanding customer service and broad based product lines are at the heart of Drug Mart’s growth and success. The company slogan says it all: <i><q>Discount Drug Mart Saves You the Runaround…We Have Everything You Need.</q></i></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);","export const SET_CART_ITEMS = 'SET_CART_ITEMS';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const FETCH_ITEMS_BEGIN = 'FETCH_ITEMS_BEGIN';\r\nexport const FETCH_ITEMS_FAILURE = 'FETCH_ITEMS_FAILURE';\r\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\r\n\r\nexport const setCartItems = items => ({\r\n    type: SET_CART_ITEMS,\r\n    payload: {items}\r\n})\r\n\r\nexport const removeItem = userItemId => ({\r\n    type: REMOVE_ITEM,\r\n    userItemId\r\n});\r\n\r\nexport const addItem = item => ({\r\n    type: ADD_ITEM,\r\n    item\r\n});\r\n\r\nexport const fetchItemsBegin = () => ({\r\n    type: FETCH_ITEMS_BEGIN\r\n});\r\n\r\nexport const fetchItemsFailure = (error) => ({\r\n    type: FETCH_ITEMS_FAILURE,\r\n    payload: {error}\r\n});\r\n\r\nexport const fetchItemsSuccess = (items) => ({\r\n    type: FETCH_ITEMS_SUCCESS,\r\n    payload: {items}\r\n});\r\n\r\nexport function fetchCartItems(userId) {\r\n    return dispatch => {\r\n      dispatch(fetchItemsBegin());\r\n\r\n     return fetch(\"https://discountdm.herokuapp.com/getItemsForUser\",{\r\n         headers: {\r\n             \"USERID\": userId\r\n         }\r\n     })\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          dispatch(fetchItemsSuccess(json));\r\n          return json;\r\n        })\r\n        .catch(error => dispatch(fetchItemsFailure(error)));\r\n    };\r\n  }\r\n\r\n  export function postAddItem(userId, item){\r\n      return dispatch => {\r\n          \r\n     return fetch(\"https://discountdm.herokuapp.com/addItem\",{\r\n         headers: {\r\n             \"USERID\": userId,\r\n             \"ITEMID\": item.id\r\n         }\r\n     })\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json){\r\n                dispatch(addItem(item));\r\n            }else{\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n      };\r\n  }\r\n\r\n  export function putRemoveItem(userItemId){\r\n    return dispatch => {\r\n\r\n        return fetch(\"https://discountdm.herokuapp.com/removeItem\",{\r\n       headers: {\r\n           \"ITEMID\": userItemId\r\n       }\r\n   })\r\n      .then(handleErrors)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n          if(json){\r\n              dispatch(removeItem(userItemId));\r\n          }else{\r\n          }\r\n      })\r\n      .catch(error => console.log(error));\r\n    };\r\n}\r\n\r\n  // Handle HTTP errors since fetch won't.\r\n  function handleErrors(response) {\r\n    if (!response.ok) {\r\n      throw Error(response.statusText);\r\n    }\r\n    return response;\r\n  }","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {removeItem, fetchCartItems} from '../Actions/cartActions';\r\nimport Product from '../Components/Product';\r\nimport {setCartItems} from '../Actions/cartActions';\r\n\r\nlet total = 0.0;\r\nclass Cart extends React.Component{\r\n\r\n    componentDidMount(){\r\n        if(this.props.UserReducer.user !== undefined){\r\n        this.props.handleFetchCartItems(this.props.UserReducer.user.id);\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <p>Here is your cart</p>\r\n                <div className=\"row text-center\">\r\n                {(this.props.CartReducer.cartItems !== undefined && this.props.CartReducer.cartItems.length !== 0) \r\n                    ?\r\n                     this.props.CartReducer.cartItems.map((item) => (\r\n                    <div key={item.id + Math.random()} className=\"col-md-6 col-lg-4 align-content-center\">\r\n                            <Product product={item} isCart={true}></Product>            \r\n                    </div>))\r\n                    :\r\n                     <p>You have no items in your cart</p>}\r\n                </div>\r\n                <hr />\r\n                <h4>Total: ${getTotal(this.props.CartReducer.cartItems)}</h4>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst getTotal = (items) => {\r\n    let total = 0;\r\n    for(let i = 0; i < items.length; i++){\r\n        total += items[i].price;\r\n    }\r\n    return round(total, 2);\r\n}\r\n\r\nfunction round(value, decimals) {\r\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\r\n  }\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleRemoveItem: itemId => dispatch(removeItem(itemId)),\r\n        handleFetchCartItems: userId => dispatch(fetchCartItems(userId))\r\n      };\r\n};\r\n\r\nconst ConnectedCart = connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n\r\nexport default ConnectedCart;","import React from 'react';\r\n\r\nexport const Contact = () => (\r\n    <div>\r\n        <p>Contact us</p>\r\n    </div>\r\n);","\r\nexport const LOGIN_USER_BEGIN = 'LOGIN_USER_BEGIN';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE';\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n\r\nexport const REGISTER_USER_BEGIN = 'REGISTER_USER_BEGIN';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILURE = 'REGISTER_USER_FAILURE';\r\n\r\nexport const loginUserBegin = () => ({\r\n    type: LOGIN_USER_BEGIN\r\n});\r\n\r\nexport const loginUserFailure = (error) => ({\r\n    type: LOGIN_USER_FAILURE,\r\n    payload: {error}\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: {user}\r\n});\r\n\r\nexport const registerUserBegin = () => ({\r\n    type: REGISTER_USER_BEGIN\r\n});\r\n\r\nexport const registerUserFailure = (error) => ({\r\n    type: REGISTER_USER_FAILURE,\r\n    payload: {error}\r\n});\r\n\r\nexport const registerUserSuccess = () => ({\r\n    type: REGISTER_USER_SUCCESS\r\n}); \r\n\r\nexport const logoutUser = () => ({\r\n    type: LOGOUT_USER\r\n});\r\n\r\nexport const loginUser = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(loginUserBegin());\r\n  \r\n       return fetch(\"https://discountdm.herokuapp.com/loginUser\", {\r\n           headers: {\r\n               'USERNAME': username,\r\n               'PASSWORD': password\r\n           }\r\n       })\r\n          .then(handleErrors)\r\n          .then(res => res.json())\r\n          .then(json => {\r\n            dispatch(loginUserSuccess(json));\r\n            return json;\r\n          })\r\n          .catch(error => dispatch(loginUserFailure(error)));\r\n      };\r\n    };\r\n\r\nexport const registerUser = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(registerUserBegin());\r\n\r\n        return fetch(\"https://discountdm.herokuapp.com/registerUser\", {\r\n            headers: {\r\n                'USERNAME': username,\r\n                'PASSWORD': password\r\n            }\r\n        })\r\n           .then(handleErrors)\r\n           .then(res => res.json())\r\n           .then(json => {\r\n             dispatch(registerUserSuccess(json));\r\n             return json;\r\n           })\r\n           .catch(error => dispatch(registerUserFailure(error)));\r\n    };\r\n};\r\n\r\n  \r\n    // Handle HTTP errors since fetch won't.\r\n    function handleErrors(response) {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response;\r\n    }\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {fetchCartItems} from '../Actions/cartActions';\r\n\r\nexport const LoginSuccess = (props) => (\r\n    <div>\r\n        <div className=\"row\">\r\n            <h3 className=\"offset-sm-3 col-sm-6\">Welcome {props.userName}</h3>\r\n            <Link to=\"/shop\" onClick={() => props.handleGetItemsForUser(props.userId)} className=\"btn btn-primary offset-sm-3 col-sm-6\">Shop</Link>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <Link to=\"/cart\" onClick={() => props.handleGetItemsForUser(props.userId)} className=\"btn btn-primary offset-sm-3 col-sm-6\">My Cart</Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.UserReducer.user.id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleGetItemsForUser: userId => dispatch(fetchCartItems(userId))\r\n});\r\n\r\nconst ConnectedLoginSuccess = connect(mapStateToProps, mapDispatchToProps)(LoginSuccess);\r\n\r\nexport default ConnectedLoginSuccess;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../Actions/userActions';\r\nimport RegisterSuccess from '../Components/RegisterSuccess';\r\n\r\nvar userNameElement;\r\nvar passwordElement;\r\nvar passwordConfirmElement;\r\nlet areMatchingPasses = true;\r\n\r\nclass Register extends React.Component{\r\n    \r\n\r\n    componentDidMount(){\r\n        userNameElement = document.getElementById('username');\r\n        passwordElement = document.getElementById('password');\r\n        passwordConfirmElement = document.getElementById('passwordCheck');\r\n        alert(\"For demo use only. Please use a dummy password for safety (e.g. 'Test123!'\");\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.props.regSuccess === undefined || this.props.regSuccess === false){\r\n            return (\r\n                <div>\r\n                        <form className=\"container text-center\">\r\n                            <h3>Register</h3>\r\n                            <hr />\r\n                            <div className=\"form-group row\">\r\n                                <label className=\"offset-sm-3 col-sm-6\">Username</label>\r\n                                <input id=\"username\" type=\"text\" className=\"form-control offset-sm-3 col-sm-6\" placeholder=\"enter username\"></input>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label className=\"offset-sm-3 col-sm-6\">Password</label>\r\n                                <input id=\"password\" type=\"password\" className=\"form-control offset-sm-3 col-sm-6\" placeholder=\"enter password\"></input>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label className=\"offset-sm-3 col-sm-6\">Confirm Password</label>\r\n                                <input id=\"passwordCheck\" type=\"password\" className=\"form-control offset-sm-3 col-sm-6\" placeholder=\"retype password\"></input>\r\n                            </div>\r\n                            <br />\r\n                        </form>\r\n                        <div className=\"form-group row\">\r\n                            <button \r\n                                className=\"btn btn-primary btn-block offset-5 col-2\"\r\n                                onClick={() => {\r\n                                    if(checkMatch(passwordElement.value, passwordConfirmElement.value)){\r\n                                        areMatchingPasses = true;\r\n                                        this.props.handleRegisterUser(userNameElement.value, passwordElement.value);\r\n                                    }else{\r\n                                        areMatchingPasses = false;\r\n                                    }\r\n                                }}\r\n                            >\r\n                            Sign up\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <RegisterSuccess />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    regSuccess: state.UserReducer.regSuccess\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleRegisterUser: (username, password) => dispatch(registerUser(username, password))\r\n});\r\n\r\n\r\nconst ConnectedRegister = connect(mapStateToProps, mapDispatchToProps)(Register);\r\n\r\nexport default ConnectedRegister;\r\n\r\nconst checkMatch = (a,b) => (\r\n    a === b\r\n);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchProducts, setProducts} from '../Actions/productActions';\r\nimport Product from '../Components/Product'\r\n\r\nlet isLoggedIn;\r\n\r\nclass Shop extends React.Component{\r\n\r\n    componentDidMount() {\r\n        \r\n        let products = JSON.parse(localStorage.getItem('shopItems')) || [];\r\n        if(products === undefined || products.length == 0){\r\n          this.props.dispatch(fetchProducts());\r\n        }else{\r\n          this.props.dispatch(setProducts(products));\r\n        }\r\n\r\n        if(this.props.user !== undefined && this.props.user.id !== -1){\r\n          isLoggedIn = true;\r\n\r\n        }else{\r\n           isLoggedIn = false;\r\n        }\r\n      }\r\n\r\n    render(){\r\n        const { error, loading, products } = this.props;\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>;\r\n          }\r\n      \r\n          if (loading) {\r\n            return <div>Loading...</div>;\r\n          }\r\n      \r\n          return (\r\n            <div className=\"row text-center\">\r\n            {!isLoggedIn ? <p className=\"col-12 alert-danger\">Please login to add items to cart</p>: <span></span>}\r\n              {products.map(product =>\r\n                <div key={product.id} className=\"col-md-6 col-lg-4\" >\r\n                    <div className=\"card mb-3\">\r\n                        <Product isCart={false} product={product} />\r\n                    </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.ProductReducer.items,\r\n    loading: state.ProductReducer.loading,\r\n    error: state.ProductReducer.error,\r\n    user: state.UserReducer.user,\r\n    cartItems: state.CartReducer.cartItems\r\n  });\r\n\r\nconst ConnectedShop = connect(mapStateToProps)(Shop);\r\n\r\nexport default ConnectedShop;\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {loginUser} from '../Actions/userActions';\r\nimport LoginSuccess from '../Components/LoginSuccess';\r\n\r\nclass Login extends React.Component{\r\n\r\n    componentDidUpdate(){\r\n        clearInputs();\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.props.user == undefined || this.props.user.id == -1){\r\n       return (\r\n                <div>\r\n                    <form className=\"container text-center\">\r\n                        <h3>Sign in</h3>\r\n                        <hr />\r\n                        {this.props.user == undefined ? <div className=\"alert-danger offset-sm-3 col-sm-6\">Username or Password is invalid</div>: <span></span>}\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"offset-sm-3 col-sm-6\">Username</label>\r\n                            <input id=\"username\" type=\"text\" className=\"form-control offset-sm-3 col-sm-6\" placeholder=\"enter username\"></input>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"offset-sm-3 col-sm-6\">Password</label>\r\n                            <input id=\"password\" type=\"password\" className=\"form-control offset-sm-3 col-sm-6\" placeholder=\"enter password\"></input>\r\n                        </div>\r\n                        <br />\r\n                    </form>\r\n                    <div className=\"form-group row\">\r\n                        <button \r\n                            className=\"btn btn-primary btn-block offset-5 col-2\"\r\n                            onClick={\r\n                                () => this.props.handleOnLogin(document.getElementById('username').value, document.getElementById('password').value)\r\n                            }\r\n                        >\r\n                        Login\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else{\r\n            localStorage.setItem('userId', this.props.user.id);\r\n            return(\r\n            <LoginSuccess userName={this.props.user.userName} />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.UserReducer.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleOnLogin: (username, password) => {\r\n        dispatch(loginUser(username, password));\r\n    }\r\n});\r\n\r\nconst clearInputs = () => {\r\n    if(document.getElementById('username') !== null && document.getElementById('password') !== null){\r\n    document.getElementById('username').value = '';\r\n    document.getElementById('password').value = '';\r\n}\r\n};\r\n\r\nconst ConnectedLogin = connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\nexport default ConnectedLogin;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst RegisterSuccess = () => (\r\n    <div className=\"row\">\r\n        <h3 className=\"col-xs-12 offset-sm-3 col-sm-6 text-center\">Registered Successfully</h3>\r\n        <Link to='/login' className=\"btn btn-primary col-xs-12 offset-sm-3 col-sm-6\">Login Now</Link>\r\n    </div>\r\n);\r\n\r\nexport default RegisterSuccess;","export const FETCH_PRODUCTS_BEGIN = 'FETCH_PRODUCTS_BEGIN';\r\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\r\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE';\r\nexport const SET_PRODUCTS = 'SET_PRODUCTS';\r\n\r\nexport const fetchProductsBegin = () => ({\r\n    type: FETCH_PRODUCTS_BEGIN\r\n});\r\n\r\nexport const fetchProductsSuccess = products => ({\r\n    type: FETCH_PRODUCTS_SUCCESS,\r\n    payload: { products }\r\n});\r\n\r\nexport const fetchProductsFailure = error => ({\r\n    type: FETCH_PRODUCTS_FAILURE,\r\n    payload: { error }\r\n});\r\n\r\nexport const setProducts = products => ({\r\n    type: SET_PRODUCTS,\r\n    payload: {products}\r\n});\r\n\r\n\r\nexport function fetchProducts() {\r\n    return dispatch => {\r\n      dispatch(fetchProductsBegin());\r\n\r\n     return fetch(\"https://discountdm.herokuapp.com/getItems\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          dispatch(fetchProductsSuccess(json));\r\n          return json;\r\n        })\r\n        .catch(error => dispatch(fetchProductsFailure(error)));\r\n    };\r\n  }\r\n\r\n  // Handle HTTP errors since fetch won't.\r\n  function handleErrors(response) {\r\n    if (!response.ok) {\r\n      throw Error(response.statusText);\r\n    }\r\n    return response;\r\n  }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartCounter = (props) => (\r\n    <span className=\"cart-counter\">\r\n        {props.items !== undefined && props.items.length > 0 ? <span className=\"span-counter\"> {props.items.length} </span> : <span></span>}\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    items: state.CartReducer.cartItems\r\n});\r\n\r\nconst ConnectedCounter = connect(mapStateToProps)(CartCounter);\r\n\r\nexport default ConnectedCounter;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport CartCounter from './CartCounter';\r\nimport { logoutUser } from '../Actions/userActions';\r\nimport { setCartItems } from '../Actions/cartActions';\r\n\r\nconst Header = (props) => (\r\n    (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand navbar-light\">\r\n                <div className=\"d-none d-sm-none d-md-block \">\r\n                     <Link className=\"navbar-brand\" to=\"/\">Discount Drug Mart</Link>\r\n                </div>\r\n                <div className=\"d-sm-block d-md-none header-brand\">\r\n                     <Link className=\"navbar-brand\" to=\"/\">DDM</Link>\r\n                </div>\r\n                <div className=\" navbar-collapse justify-content-between\" id=\"navbarText\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item header-link\">\r\n                            <Link className=\"nav-link\" to=\"/shop\">Shop</Link>\r\n                        </li>\r\n                        <li className=\"nav-item header-link\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li>\r\n                        <li className=\"nav-item header-link\">\r\n                            <Link className=\"nav-link\" to=\"/cart\">Cart <CartCounter /></Link>\r\n                        </li>\r\n                    </ul>\r\n                        {\r\n                            props.user !== undefined && props.user.id !== -1\r\n                             ? \r\n                              (\r\n                                <ul className=\"navbar-nav\">\r\n                                    <li className=\"nav-item header-link\">\r\n                                        <Link onClick={() => props.handleLogout()} className=\"nav-link\" to=\"/login\">Logout</Link>\r\n                                    </li>\r\n                               </ul>\r\n                              )\r\n                             :\r\n                             (\r\n                                <ul className=\"navbar-nav\">\r\n                                    <li className=\"nav-item header-link\">\r\n                                        <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item header-link\">\r\n                                        <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n                                    </li>\r\n                                </ul>\r\n                             )\r\n                        }\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    cartItems: state.CartReducer.cartItems,\r\n    user: state.UserReducer.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleLogout: () => {\r\n        dispatch(logoutUser());\r\n        dispatch(setCartItems([]));\r\n    }\r\n});\r\n\r\nconst ConnectedHeader = connect(mapStateToProps, mapDispatchToProps)(Header);\r\n\r\nexport default ConnectedHeader;","import React from 'react';\r\nimport {\r\n    SET_CART_ITEMS, \r\n    REMOVE_ITEM, \r\n    ADD_ITEM, \r\n    FETCH_ITEMS_BEGIN, \r\n    FETCH_ITEMS_FAILURE, \r\n    FETCH_ITEMS_SUCCESS,\r\n} from '../Actions/cartActions'\r\n\r\n\r\nlet defaultState = {\r\n    cartItems: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst CartReducer = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case ADD_ITEM:\r\n            let addedItems = [...state.cartItems, action.item];\r\n            localStorage.setItem('cartItems', JSON.stringify(addedItems));\r\n            return {cartItems: addedItems};\r\n\r\n        case REMOVE_ITEM:\r\n            let filteredItems = [...state.cartItems.filter(item => item.userItemId !== action.userItemId)];\r\n            localStorage.setItem('cartItems', JSON.stringify(filteredItems));\r\n            return {cartItems: filteredItems};\r\n\r\n        case SET_CART_ITEMS:\r\n            return {cartItems: action.payload.items};\r\n\r\n        case FETCH_ITEMS_BEGIN:\r\n            return{\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            };\r\n        \r\n        case FETCH_ITEMS_FAILURE:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n\r\n        case FETCH_ITEMS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                cartItems: action.payload.items\r\n            };\r\n\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default CartReducer;","import React from 'react';\r\nimport {FETCH_PRODUCTS_BEGIN, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_FAILURE, SET_PRODUCTS, setProducts} from '../Actions/productActions';\r\n\r\nlet defaultState = {\r\n    items: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst ProductReducer = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case FETCH_PRODUCTS_BEGIN:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case FETCH_PRODUCTS_SUCCESS:\r\n            localStorage.setItem('shopItems', JSON.stringify(action.payload.products));\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                items: action.payload.products\r\n            };\r\n        case FETCH_PRODUCTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n                items: []\r\n              };\r\n        case SET_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                items: action.payload.products\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ProductReducer;","import {\r\n    LOGIN_USER_BEGIN,\r\n    LOGIN_USER_FAILURE,\r\n    LOGIN_USER_SUCCESS, \r\n    REGISTER_USER_BEGIN, \r\n    REGISTER_USER_FAILURE,\r\n    REGISTER_USER_SUCCESS,\r\n    LOGOUT_USER\r\n} from '../Actions/userActions';\r\n\r\nlet defaultState = {\r\n    user: {\r\n        id: -1,\r\n        userName: \"default\"\r\n    },\r\n    regSuccess: false\r\n};\r\n\r\nconst UserReducer = (state = defaultState, action) => {\r\n\r\n    switch(action.type){\r\n        case LOGIN_USER_BEGIN:\r\n            return {state};\r\n\r\n        case LOGIN_USER_SUCCESS:\r\n            return {user: action.payload.user};\r\n\r\n        case LOGIN_USER_FAILURE:\r\n            return {state};\r\n\r\n        case REGISTER_USER_BEGIN:\r\n            return {state};\r\n\r\n        case REGISTER_USER_SUCCESS:\r\n            \r\n            return {regSuccess: true};\r\n        \r\n        case REGISTER_USER_FAILURE:\r\n            return {state};\r\n        \r\n        case LOGOUT_USER:\r\n            \r\n            localStorage.removeItem('userId');\r\n            return {undefined};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default UserReducer;","import React from 'react';\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport CartReducer from '../Reducers/CartReducer';\r\nimport ProductReducer from '../Reducers/ProductReducer';\r\nimport UserReducer from '../Reducers/UserReducer';\r\n\r\nlet store = createStore(combineReducers({CartReducer, ProductReducer, UserReducer}), applyMiddleware(thunk));\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport {AppRouter} from './Components/App-Router';\nimport store from './Store/Store'\nimport { Provider, connect } from 'react-redux';\n\n\n\nconst App = () => (\n    <Provider store={store}>\n      <Container/>\n    </Provider>\n);\n\n\nconst Container = connect()(AppRouter);\n\n\nexport default App;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport {About} from '../Pages/About';\r\nimport ConnectedCart from '../Pages/Cart';\r\nimport {Contact} from '../Pages/Contact';\r\nimport Login from '../Pages/Login';\r\nimport Register from '../Pages/Register';\r\nimport ConnectedShop from '../Pages/Shop';\r\nimport ConnectedHeader from './Header';\r\n\r\n\r\nexport const AppRouter = () => (\r\n    <div>\r\n        <Router>\r\n            <ConnectedHeader />\r\n            <Switch>\r\n                <div className=\"container\">\r\n                    <Route exact path=\"/ddmReact\" component={ConnectedShop} />\r\n                    <Route exact path=\"/cart\" component={ConnectedCart} />\r\n                    <Route exact path=\"/about\" component={About} />\r\n                    <Route exact path=\"/contact\" component={Contact} />\r\n                    <Route exact path=\"/shop\" component={ConnectedShop} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                </div>\r\n            </Switch>\r\n        </Router>\r\n    </div>\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}